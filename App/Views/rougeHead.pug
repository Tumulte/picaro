html(lang=language)
  head
    title #{title}

    link(rel="stylesheet" type="text/css" href="/static/normalize.css")
    script.
        var colorSetCollection = !{colorSetCollection};
        var isLogged = #{isLogged}
    block head
block body

block cssPanel
    if(isLogged)
        if(isDev)
            div(id="app-status") Integration
                if(integrationReport.stats.failures === 0)
                    span ok
                else
                    span #{integrationReport.stats.failures} failed
            div(id="app-status") Unit tests
                if(unitReport.numFailedTests === 0)
                    span ok
                else
                    span #{unitReport.numFailedTests} failed
        div(id="app-status")

        label(id="css-panel__toggle-label" class="css-panel_sketchy" for="css-panel__toggle")
            div Panel
            svg(class="css-panel-svg-highlight")

        input(type="checkbox" id="css-panel__toggle" name="css-panel__toggle")
        div(id="css-panel")
            css-panel-selector( inline-template="" )
                div(id="css-panel__selector")
                    warning-component( :warning-message="warningMessage")
                    ul( :key="selectorIndex" )
                        li(v-for="(propertyCollection, selector) in selectorCollection" )
                            wired-card(class="css-panel__selector-container")
                                span(contenteditable=true @blur="resetComponent()" @keypress.enter.prevent.stop="saveEdit({selector:selector}, $event)") {{jsonToCss(selector)}}
                                span(@click="deleteSelector(selector)") [X]
                            ul(class="css-panel__selector-box")
                                wired-card
                                    li(v-for="(value, property) in propertyCollection"  v-on:click="storeSelectorAndProperty(selector, property)" )
                                        span(contenteditable=true @blur="resetComponent()" @keypress.enter.prevent.stop="saveEdit({selector:selector, property:property}, $event)") {{jsonToCss(property)}}
                                        div(contenteditable=true @keypress.enter.prevent.stop="saveEdit({selector:selector, property:property, value: true} , $event)" v-html="getColorFromCoordinates(value)")
                                        span(@click="deleteProperty(selector,property)") [X]
                                    label
                                        div(class="css-panel__label") Add new property
                                        wired-input(type="text"  class="css-panel__input"  @keyup.enter="addProperty($event.target.value,selector)")
                    label
                        div(class="css-panel__label") Add new selector
                        wired-input(type="text"  class="css-panel__input"  @keyup.enter="addSelector($event.target.value)")

            css-panel-color( inline-template="" )
                div(id="css-panel__color" v-if="$store.getters.loaded")

                    wired-card(class="css-panel__container")
                        label
                            div(class="css-panel__label") Combination Presets
                            select(v-model="colorParameterCollection.colorSetParamString" class="css-panel__input" name="colorSetParamCollection"  v-on:change="updatecolorSetParams")
                                option(value="none") Selectionner un sch√©ma de couleur
                                option(v-for="colorSet in colorSetCollection" v-bind:value="stringify(colorSet.combinationCollection)") {{colorSet.name}}
                    wired-card(class="css-panel__container")
                        label Light variation
                            input(type="range" min="0" max="10" name="variation-light-amt" v-model="variationLightAmt" @input="updateVariationAmt()" )
                        label Saturation variation
                            input(type="range"  min="0" max="10" name="variation-sat-amt" v-model="variationSatAmt" @input="updateVariationAmt()" )
                    div(v-bind:style="bgColor(dominantColor)" @input="updateColor()")
                        wired-card(class="css-panel__container")
                            label
                                span(class="css-panel__slider-label")  Hue
                                input(type="range" class="css-panel__color-range css-panel__color-range_hue" min="0" max="360" v-model="dominantColor.hue")
                            label
                                span(class="css-panel__slider-label") Light
                                input(type="range"  class="css-panel__color-range css-panel__color-range_light" min="0" max="100"  v-model="dominantColor.light")
                            label
                                span(class="css-panel__slider-label") Sat.
                                input(type="range"  class="css-panel__color-range css-panel__color-range_sat" min="0" max="100"  v-model="dominantColor.saturation")
                            div
                                div(v-for="(subColor, index) in colorCollection.dominantSubCollection" :class="{'__main':isMainColor(bgColor(subColor), bgColor(dominantColor))}" v-on:click="storeColorCoordinate(['dominant', index])" class="sub-combination" v-bind:style="bgColor(subColor)")
                    div(v-for="(color, index) in colorCollection.combinationCollection" v-bind:style="bgColor(color)" v-on:input="updateCombinationColor(index, color)")
                        wired-card
                            label
                                span(class="css-panel__slider-label") Hue
                                input(type="range"  class="css-panel__color-range css-panel__color-range_hue" min="0" max="360" v-model="color.hue")
                            label
                                span(class="css-panel__slider-label") Light
                                input(type="range"  class="css-panel__color-range css-panel__color-range_light" min="0" max="100"  v-model="color.light")
                            label
                                span(class="css-panel__slider-label") Sat.
                                input(type="range"  class="css-panel__color-range css-panel__color-range_sat" min="0" max="100"  v-model="color.saturation")

                            div
                                div(v-for="(subColor, subIndex) in color.subCombination" :class="{'__main':isMainColor(bgColor(subColor), bgColor(color))}"  v-on:click="storeColorCoordinate([index, subIndex])" class="sub-combination" v-bind:style="bgColor(subColor)")
                            wired-button(v-on:click="removeColor(index)" class="css-panel__color-button") Remove Color

                    wired-button(v-on:click="addColor" class="css-panel__color-button") Add Color



            css-panel-main(inline-template="" )
                form(id="css-panel__main" method="post" :key="cssPanelIndex")
                    warning-component( :warning-message="warningMessage")
                    input(type="hidden" v-for="(colorData, name) in $store.getters.colorParameterCollection" v-bind:name="name" v-bind:value="colorData" )
                    input(type="hidden"  name="selectorSetParamString" v-bind:value="JSON.stringify(selectorCollection)" )
                    wired-card(class="css-panel__container")
                        fieldset(class="style-set-list")
                            legend Style Set
                            div(v-for="selectedStyleSet in styleSetCollection" class="_item" :class="{'__current-style-set': isCurrentSet(selectedStyleSet.id)}" @click="updateStyleSet(selectedStyleSet)" ) {{selectedStyleSet.setName}}
                    wired-card(class="css-panel__container")
                        fieldset
                            legend Fonts
                            wired-card(class="css-panel__container")
                                label Google Fonts
                                    input(type="radio" class="css-panel__radio" name="fontOrigin" v-model="styleSet.fontOrigin" value="google" @change="updateFontCollection()")
                                    div(class="css-panel__radio-element")
                                label Local Fonts
                                    input(type="radio" class="css-panel__radio" name="fontOrigin" v-model="styleSet.fontOrigin" value="local" @change="updateFontCollection()")
                                    div(class="css-panel__radio-element")
                            wired-card(class="css-panel__container")
                                label
                                    div(class="css-panel__label") Font size (px)
                                    input(type="number" v-model="styleSet.fontSize"  class="css-panel__input" name="fontSize" v-on:change="updateFontSize")
                            wired-card(class="css-panel__container")

                                label
                                    div(class="css-panel__label") Main Font
                                    select( v-model="styleSet.fontFamilyMain" class="css-panel__input" name="fontFamilyMain" v-on:change="updateCssFont('fontFamilyMain')")
                                        option(value="none") Selectionner une font
                                        option(v-for="font in fontCollection" v-bind:value="font.family") {{font.family}}
                                label
                                    div(class="css-panel__label") Alternative Font
                                    select( v-model="styleSet.fontFamilyAlt"  class="css-panel__input" name="fontFamilyAlt" v-on:change="updateCssFont('fontFamilyAlt')")
                                        option(value="none") Selectionner une font
                                        option(v-for="font in fontCollection" v-bind:value="font.family") {{font.family}}
                                label
                                    div(class="css-panel__label") Title Font
                                    select( v-model="styleSet.fontFamilyTitle" class="css-panel__input"  name="fontFamilyTitle" v-on:change="updateCssFont('fontFamilyTitle')")
                                        option(value="none") Selectionner une font
                                        option(v-for="font in fontCollection" v-bind:value="font.family") {{font.family}}

                            input(type="text" name="id" v-bind:value="styleSet.id")
                    wired-card(class="css-panel__container")
                        fieldset
                            legend Save
                            label
                                div(class="css-panel__label") Config name
                                input(type="text" class="css-panel__input" name="setName" v-model="styleSet.setName" )
                            button(class="css-panel__container" formaction='/admin/settings/overwrite' @click.prevent="checkSave($event)") Save
                            button(class="css-panel__container" formaction='/admin/settings/new' @click.prevent="saveNew($event)") Save a new Style Set
                            button(class="css-panel__container"  @click.prevent="checkDelete(styleSet.id)" type="button") Delete Style Set
